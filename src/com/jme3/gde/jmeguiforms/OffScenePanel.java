/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OffScenePanelBeanForm.java
 *
 * Created on 10/12/2010, 17:28:42
 */
package com.jme3.gde.jmeguiforms;

import com.jme3.gde.core.scene.SceneApplication;
import com.jme3.gde.core.scene.processors.WireProcessor;
import java.util.concurrent.Callable;

/**
 *
 * @author Glauco
 */
public class OffScenePanel extends com.jme3.gde.core.scene.OffScenePanel {

    private WireProcessor processor;

    /** Creates new form OffScenePanelBeanForm */
    public OffScenePanel() {
        this(320, 320);
    }

    /** Creates new form OffScenePanelBeanForm */
    public OffScenePanel(int width, int height) {
        super(width, height);
        initComponents();
    }

    public void enableWireFrame(final boolean enable) {
        SceneApplication.getApplication().enqueue(new Callable<Object>() {

            public Object call() throws Exception {
                if (enable) {
                    doEnableWireFrame();
                } else {
                    doDisableWireFrame();
                }
                return null;
            }
        });
    }

    private void doEnableWireFrame() {
        getViewPort().addProcessor(getWireProcessor());
    }

    private void doDisableWireFrame() {
        getViewPort().removeProcessor(getWireProcessor());
    }

    public WireProcessor getWireProcessor() {
        if (processor == null) {
            processor = new WireProcessor(SceneApplication.getApplication().getAssetManager());
        }
        return processor;
    }

    @Override
    public void preFrame(float f) {
        super.preFrame(f);
        if (SceneApplication.getApplication().getInputManager() != null) {
            SceneApplication.getApplication().getInputManager().update(f);
        }
    }

    public void cleanup() {
        super.cleanup();
        if (processor != null) {
            processor.cleanup();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(320, 320));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
